{"title":"EM in a nutshell","markdown":{"yaml":{"title":"EM in a nutshell","author":"Sean Zhang","date":"2019-08-02","categories":["deep learning","probability","technical"],"image":"em.png"},"headingText":"Limitations","containsRefs":false,"markdown":"\n\n\nOne of the most interesting ideas in machine learning I've found is the EM algorithm. The idea behind EM is summarized as follows:\n\n- Normally, in a learning problem, we are given a dataset $X$, we think of a model that capture the probability of the dataset $P(x)$, and the model is governed by a bunch of parameters $\\theta$.\n- What we do in machine learning (typically), is to solve for $\\theta$ by optimizing for the **likelihood of the data**, given by $P(X|\\theta)$.\n- one example would be logistic regression for multi-class classification, where \n$$\nP(X|\\theta) = \\prod_{n=1}^N \\frac{\\sum_{k=1}^K\\exp(\\theta^Tx_n)\\cdot y_{nk}}{\\sum_{k=1}^K\\exp(\\theta^Tx_n)}\n$$\n- To maximize the **likelihood of the data**, we typically take the log of the likelihood and maximize it using\n    - close-form solution (if available and dataset is small enough), e.g., linear regression\n    - gradient descent (if close-form solution is not available or dataset is too large)\n- However, there're often cases where the distribution can't be modeled so \"simply\", meaning there're more structure to the underlying distribution, where the distribution of $X$ is not only determined by $\\theta$, but also by another set of random variables $Z$, one such example would be mixed gaussian where\n$$\n\\begin{aligned}P(X|\\theta) &= \\sum_{z=k}^K P(X, Z|\\theta) \\\\&= \\sum_{z=k}^KP(Z=z|\\theta)P(X|Z=z, \\theta) \\\\&= \\prod_{n=1}^N \\sum_{z=k}^KP(z | \\theta)P(x_n|Z = z, \\theta) \\\\&=\\prod_{n=1}^N \\sum_{z=k}^K \\pi_{k}\\mathcal{N}(x_n | \\mu_z, \\sigma_z)\\end{aligned}\n$$\nbecause there's a sum inside the product, when taking the log of the likelihood, the close-form solution becomes very complex and hard to directly optimize for.\n\n---\n- Therefor, we optimize it through a two-step process\n    - **Expectation Step**: Fix $\\theta$ to be $\\theta^{old}$, evaluate the posterior distribution of $Z$ , i.e., because we know the form of the likelihood, we can calculate the posterior as long as a prior of $Z$ is given.\n   $$\n   P(Z = z | \\theta^{old}, X) = \\frac{P(Z|\\theta^{old})P(X|Z,\\theta^{old})}{P(X|\\theta^{old})} = \\frac{P(Z|\\theta^{old})P(X|Z,\\theta^{old})}{\\sum_{z}P(Z|\\theta^{old})P(X|\\theta^{old})}\n   $$\n   - **Maximization Step**: Maximize the likelihood $P(X|\\theta)$ but use the posterior $P(Z|\\theta^{old},X)$ in place of the prior $P(Z|\\theta)$, i.e., maximize \n    $$\n    Q(\\theta, \\theta^{old}) = \\sum_{z} P(Z|\\theta^{old}, X)P(X|Z, \\theta)\n    $$\n  - Repeat the two steps until convergence.\n- We can interpret the EM algorithm by considering a decomposition of the likelihood, i.e., \n  $$\n  \\begin{aligned}\\ln(p(X|\\theta)) &= \\mathcal{L}(q, \\theta) + KL(q||p) \\\\&= \\sum_{Z}q(Z)\\ln(\\frac{p(X, Z| \\theta)}{q(Z)}) - \\sum_{Z}q(Z)\\ln(\\frac{p(Z|\\theta,X)}{q(Z)}) \\\\&= \\sum_{Z}q(Z)\\ln(p(X,Z|\\theta)) - \\sum_{Z}q(Z)\\ln(p(Z|\\theta, X)) \\\\&=\\sum_{Z}q(Z)\\ln(\\frac{p(X,Z|\\theta)}{p(Z|\\theta, X)})\\\\&=\\sum_{Z}q(Z)\\ln(p(X|\\theta)) \\\\&=\\ln(p(X|\\theta))\\end{aligned}\n  $$\n  where $q(Z)$ is an arbitrary prior of $Z$. \n\n  This decomposition tells us that **for given a fixed $\\theta$, the best prior $q(Z)$ is found by letting it equal to the posterior $p(Z|\\theta, X)$,** since it's the only way to make the KL divergence 0. Also, for a fixed $P(Z)$, we can obtain the best $\\theta$ by using maximal likelihood optimization.\n\n::: {.column-margin}\n![EM Process](em_process.png)\n:::\n\n\n\nWhile the idea of EM is powerful, it is impractical in models where the evaluation of the posterior $p(Z|\\theta, X)$ is impossible (think multi-layer deep neural network with nonlinearity in between). \n\nTo make inference about $Z$ in those cases, we need to resort to another powerful tool (Variational Inference).","srcMarkdownNoYaml":"\n\n\nOne of the most interesting ideas in machine learning I've found is the EM algorithm. The idea behind EM is summarized as follows:\n\n- Normally, in a learning problem, we are given a dataset $X$, we think of a model that capture the probability of the dataset $P(x)$, and the model is governed by a bunch of parameters $\\theta$.\n- What we do in machine learning (typically), is to solve for $\\theta$ by optimizing for the **likelihood of the data**, given by $P(X|\\theta)$.\n- one example would be logistic regression for multi-class classification, where \n$$\nP(X|\\theta) = \\prod_{n=1}^N \\frac{\\sum_{k=1}^K\\exp(\\theta^Tx_n)\\cdot y_{nk}}{\\sum_{k=1}^K\\exp(\\theta^Tx_n)}\n$$\n- To maximize the **likelihood of the data**, we typically take the log of the likelihood and maximize it using\n    - close-form solution (if available and dataset is small enough), e.g., linear regression\n    - gradient descent (if close-form solution is not available or dataset is too large)\n- However, there're often cases where the distribution can't be modeled so \"simply\", meaning there're more structure to the underlying distribution, where the distribution of $X$ is not only determined by $\\theta$, but also by another set of random variables $Z$, one such example would be mixed gaussian where\n$$\n\\begin{aligned}P(X|\\theta) &= \\sum_{z=k}^K P(X, Z|\\theta) \\\\&= \\sum_{z=k}^KP(Z=z|\\theta)P(X|Z=z, \\theta) \\\\&= \\prod_{n=1}^N \\sum_{z=k}^KP(z | \\theta)P(x_n|Z = z, \\theta) \\\\&=\\prod_{n=1}^N \\sum_{z=k}^K \\pi_{k}\\mathcal{N}(x_n | \\mu_z, \\sigma_z)\\end{aligned}\n$$\nbecause there's a sum inside the product, when taking the log of the likelihood, the close-form solution becomes very complex and hard to directly optimize for.\n\n---\n- Therefor, we optimize it through a two-step process\n    - **Expectation Step**: Fix $\\theta$ to be $\\theta^{old}$, evaluate the posterior distribution of $Z$ , i.e., because we know the form of the likelihood, we can calculate the posterior as long as a prior of $Z$ is given.\n   $$\n   P(Z = z | \\theta^{old}, X) = \\frac{P(Z|\\theta^{old})P(X|Z,\\theta^{old})}{P(X|\\theta^{old})} = \\frac{P(Z|\\theta^{old})P(X|Z,\\theta^{old})}{\\sum_{z}P(Z|\\theta^{old})P(X|\\theta^{old})}\n   $$\n   - **Maximization Step**: Maximize the likelihood $P(X|\\theta)$ but use the posterior $P(Z|\\theta^{old},X)$ in place of the prior $P(Z|\\theta)$, i.e., maximize \n    $$\n    Q(\\theta, \\theta^{old}) = \\sum_{z} P(Z|\\theta^{old}, X)P(X|Z, \\theta)\n    $$\n  - Repeat the two steps until convergence.\n- We can interpret the EM algorithm by considering a decomposition of the likelihood, i.e., \n  $$\n  \\begin{aligned}\\ln(p(X|\\theta)) &= \\mathcal{L}(q, \\theta) + KL(q||p) \\\\&= \\sum_{Z}q(Z)\\ln(\\frac{p(X, Z| \\theta)}{q(Z)}) - \\sum_{Z}q(Z)\\ln(\\frac{p(Z|\\theta,X)}{q(Z)}) \\\\&= \\sum_{Z}q(Z)\\ln(p(X,Z|\\theta)) - \\sum_{Z}q(Z)\\ln(p(Z|\\theta, X)) \\\\&=\\sum_{Z}q(Z)\\ln(\\frac{p(X,Z|\\theta)}{p(Z|\\theta, X)})\\\\&=\\sum_{Z}q(Z)\\ln(p(X|\\theta)) \\\\&=\\ln(p(X|\\theta))\\end{aligned}\n  $$\n  where $q(Z)$ is an arbitrary prior of $Z$. \n\n  This decomposition tells us that **for given a fixed $\\theta$, the best prior $q(Z)$ is found by letting it equal to the posterior $p(Z|\\theta, X)$,** since it's the only way to make the KL divergence 0. Also, for a fixed $P(Z)$, we can obtain the best $\\theta$ by using maximal likelihood optimization.\n\n::: {.column-margin}\n![EM Process](em_process.png)\n:::\n\n\n## Limitations\n\nWhile the idea of EM is powerful, it is impractical in models where the evaluation of the posterior $p(Z|\\theta, X)$ is impossible (think multi-layer deep neural network with nonlinearity in between). \n\nTo make inference about $Z$ in those cases, we need to resort to another powerful tool (Variational Inference)."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":["sandstone"],"title-block-banner":true,"title":"EM in a nutshell","author":"Sean Zhang","date":"2019-08-02","categories":["deep learning","probability","technical"],"image":"em.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}